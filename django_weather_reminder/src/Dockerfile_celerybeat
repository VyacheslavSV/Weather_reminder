FROM python:3.11-alpine as builder

WORKDIR /usr/src/django_weather_reminder

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev \
    && apk add --no-cache build-base \
    && apk add --no-cache cairo-dev cairo cairo-tools libffi-dev pkgconfig

RUN pip install --upgrade pip
RUN pip install flake8==3.9.2
COPY .. .

COPY ../requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/django_weather_reminder/wheels -r requirements.txt



FROM python:3.11-alpine

# Создайте директории и пользователя
RUN mkdir -p /home/django_weather_reminder
RUN addgroup -S django_weather_reminder && adduser -S django_weather_reminder -G django_weather_reminder

# Установите переменные окружения
ENV HOME=/home/django_weather_reminder
ENV APP_HOME=/home/django_weather_reminder/weather_app
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/media
WORKDIR $APP_HOME

# Установите зависимости для Celery Beat
RUN apk update && apk add libpq cairo-dev libffi-dev

# Скопируйте велосипеды (wheels) и requirements.txt
COPY --from=builder /usr/src/django_weather_reminder/wheels /wheels
COPY --from=builder /usr/src/django_weather_reminder/requirements.txt .
RUN pip install --no-cache /wheels/*

# Скопируйте entrypoint скрипт
COPY src/entrypoint.prod.sh .
RUN sed -i 's/\r$//g' $APP_HOME/entrypoint.prod.sh
RUN chmod +x $APP_HOME/entrypoint.prod.sh

# Скопируйте ваше приложение
COPY .. $APP_HOME
RUN chown -R django_weather_reminder:django_weather_reminder $APP_HOME

# Установите пользователя для выполнения команд в контейнере
USER django_weather_reminder

# Этот ENTRYPOINT будет использоваться для Celery Beat
ENTRYPOINT ["/home/django_weather_reminder/weather_app/entrypoint.prod.sh"]
